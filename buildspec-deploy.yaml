version: 0.2
phases:
  install:
    commands:
      - echo "Install app dependencies"
      - curl --silent --location -o /usr/local/bin/aws-iam-authenticator "https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator"
      - chmod +x /usr/local/bin/aws-iam-authenticator
      - curl --silent --location -o "https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl"
      - chmod +x /usr/local/bin/kubectl
      - curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
      #- chmod +x ./kubectl ./aws-iam-authenticator
      - mv -v /tmp/eksctl /usr/local/bin
      - chmod +x /usr/local/bin/eksctl
      
  pre_build:
    commands:
      - echo "Entered the pre_build phase..."
      - echo "Logging in to Amazon EKS..."
      - aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME --role-arn $CB_EKS_ROLE_ARN
      - echo "Logging in to ECR..."
      - $(aws ecr get-login --no-include-email --region $AWS_REGION)
      #- TAG="$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
      - echo "Amend the correct image name in Kubernetes/eks-demployment.yaml"
      - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY:$TAG"'@' Kubernetes/eks-deployment.yaml
      #- export KUBECONFIG=$HOME/.kube/config
      - echo "Edit configmap by eksctl..."
      - eksctl create iamidentitymapping --cluster $EKS_CLUSTER_NAME --arn $CB_EKS_ROLE_ARN --group system:masters --username $CB_EKS_ROLE_NAME
  build:
    commands:
      - echo "Entered the build phase..."
      #- echo " Push the latest image to cluster"
      - kubectl apply -f Kubernetes/eks-deployment.yaml
  #post_build:
    #commands:
      #- docker push $REPOSITORY:$TAG
      #- CREDENTIALS=$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)
      #- export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      #- export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      #- export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      #- export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      #- aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
      #- kubectl apply -f Kubernetes/eks-deployment.yaml
      #- printf '[{"name":"eks-deployment","imageUri":"%s"}]' $REPOSITORY:$TAG > build.json
#artifacts:
  #files: build.json
