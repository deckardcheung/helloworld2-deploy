version: 0.2
phases:
   install:
      runtime-versions:
         python: 3.8
    
      commands:
         #- echo Logging in to Amazon ECR...
         #- $(aws ecr get-login --no-include-email --region $AWS_REGION)
         #- curl -sS -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/aws-iam-authenticator
         #- curl -sS -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.20.4/2021-04-12/bin/linux/amd64/kubectl
         #- chmod +x ./kubectl ./aws-iam-authenticator
         #- export PATH=$PWD/:$PATH
         - echo "build..."
         - pip install -r software.txt -t . # -t . = install in the current directory
   pre_build:
      commands:
         - echo "Entered pre_build phase"
         - echo "Logging in to Amazon ECR..."
         #- sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY:$TAG"'@' Kubernetes/eks-deployment.yaml
         - aws ecr get-login-password --region $AWS_REGION
         #- export KUBECONFIG=$HOME/.kube/config

   build:
      commands:
         - echo "Entered build phase"
         - echo "Build the docker image and tag..."
         #To be investigated if below dynamic tagging to yield and keep mulitple versions of an image in future@210917
         #- TAG="$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
         - docker build --tag $REPOSITORY:$TAG .

   post_build:
      commands:
         - echo "Entered post_build phase"
         - echo "Pushing the docker image"
         - docker push $REPOSITORY:$TAG
         #- CREDENTIALS=$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)
         #- export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
         #- export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
         #- export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
         #- export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
         #- aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
         #- kubectl apply -f Kubernetes/eks-deployment.yaml
         #- printf '[{"name":"eks-deployment","imageUri":"%s"}]' $REPOSITORY:$TAG > build.json

#artifacts:
   #files: build.json
